trigger:
  - main

pool:
  vmImage: "ubuntu-latest"

variables:
  OUTPUT_FOLDER: "tfvars"
  INPUT_CSV: "data/input.csv"

jobs:
  # Job 1: Generate tfvars files and matrix
  - job: GenerateMatrix
    displayName: "Generate tfvars files and dynamic matrix"
    pool:
      vmImage: "ubuntu-latest"
    steps:
      - checkout: self
        displayName: "Checkout source code"

      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.x"
          addToPath: true
        displayName: "Set up Python"

      - script: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
        displayName: "Install Python dependencies"

      - script: |
          python3 scripts/parse_csv.py $(INPUT_CSV) $(OUTPUT_FOLDER)
        displayName: "Generate tfvars files from CSV"

      - script: |
          MATRIX=$(python3 scripts/generate_matrix.py)
          echo "##vso[task.setvariable variable=TFVARS_MATRIX;isOutput=true]$MATRIX"
        displayName: "Generate dynamic matrix"

  # Job 2: Process Terraform workspaces dynamically
  - job: ProcessTerraform
    displayName: "Process Terraform Workspaces"
    dependsOn: GenerateMatrix
    strategy:
      matrix: $[ dependencies.GenerateMatrix.outputs['TFVARS_MATRIX'] ]
    pool:
      vmImage: "ubuntu-latest"
    steps:
      - checkout: self
        displayName: "Checkout source code"

      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: 'Azure subscription 1(6e47c803-d4a0-49b2-9b1f-01500ce57b80)'
          backendAzureRmResourceGroupName: 'my-rg'
          backendAzureRmStorageAccountName: 'bondastorage'
          backendAzureRmContainerName: 'terrformstatecontainer'
          backendAzureRmKey: '$(TFVARS_FILE).tfstate'

      - script: |
          terraform workspace new $(TFVARS_FILE) || terraform workspace select $(TFVARS_FILE)
          terraform plan -var-file=$(OUTPUT_FOLDER)/$(TFVARS_FILE)
          terraform apply -var-file=$(OUTPUT_FOLDER)/$(TFVARS_FILE) -auto-approve
        displayName: "Run Terraform Plan and Apply"
