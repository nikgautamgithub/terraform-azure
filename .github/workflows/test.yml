name: Terraform CSV Processing Workflow

on:
  workflow_dispatch:

jobs:
  main:
    runs-on: ubuntu-latest

    env:
      CSV_DIR: './csv'
      TFVARS_FILE: 'terraform.tfvars'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Detect Uploaded CSV Files
      run: |
        echo "Checking for uploaded CSV files in $CSV_DIR..."
        CSV_FILES=$(ls $CSV_DIR | grep .csv || true)
        if [ -z "$CSV_FILES" ]; then
          echo "Error: No CSV files found in $CSV_DIR. Please upload CSV files."
          exit 1
        fi
        echo "Found CSV files:"
        echo "$CSV_FILES"
        echo "$CSV_FILES" > csv_list.txt

    - name: Process Each CSV File
      run: |
        INVALID_FILES=""
        while IFS= read -r CSV_FILE; do
          echo "Processing $CSV_FILE..."
          RESOURCE_TYPE=$(echo $CSV_FILE | cut -d'.' -f1) # Extract resource type from filename
          echo "Detected resource type: $RESOURCE_TYPE"

          if [[ "$RESOURCE_TYPE" =~ ^(vm|aks|storage_account)$ ]]; then
            echo "Parsing CSV..."
            python scripts/parse_csv.py $CSV_DIR/$CSV_FILE $TFVARS_FILE

            echo "Running Terraform for $RESOURCE_TYPE..."
            terraform init
            terraform plan -var-file=$TFVARS_FILE -out=tfplan
            terraform apply -auto-approve tfplan

            echo "Cleaning up for $CSV_FILE..."
            rm -f $TFVARS_FILE
          else
            echo "Invalid resource type: $RESOURCE_TYPE. Skipping $CSV_FILE..."
            INVALID_FILES+="$CSV_FILE\n"
          fi
        done < csv_list.txt

        if [ -n "$INVALID_FILES" ]; then
          echo "The following files were not processed due to invalid resource types:"
          echo -e "$INVALID_FILES"
        fi

    - name: Cleanup Temporary Files
      run: |
        echo "Cleanup: Removing temporary files..."
        rm -f csv_list.txt
